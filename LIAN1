

import sys

def del_get_back_str_v2(sentence): #这个方法找的是正序与倒序的公共子串而非子序列
    if len(sentence) == 0 or len(sentence) == 1:
        return 0
    else:
        lens = len(sentence)
        sentence_list = list(sentence)
        sentence_list_re = list(sentence)
        sentence_list_re.reverse()
        len_useful_max = 0
        #sentence_list.reverse()
        #print(sentence_list)
        #print(sentence_list_re)

        for i in range(2*lens-2): # 0 1 2 3 4 5
            len_useful = 0
            #print('i-value', i)
            if i < lens:
                for k in range(i+1):# i=2 k=0 1 2
                    loc = k % (lens - 1)
                    loc_re = -(i + 1 - loc)
                    #print(i, k, loc, loc_re)

                    if sentence_list[loc] == sentence_list_re[loc_re]:
                        len_useful += 1
                #print('k-value', k, loc_re)
                #print(sentence_list[k], sentence_list_re[loc_re])
            if i >=lens:#6
                for k in range(i+1-lens, lens):  # i=2 k=0 1 2
                    loc = k
                    loc_re = -(i + 1 - loc)
                    #print('stage2')
                    #print(i, k, loc, loc_re)

                    if sentence_list[loc] == sentence_list_re[loc_re]:
                        len_useful += 1



            if len_useful > len_useful_max:
                    len_useful_max = len_useful
            #print('i = ', i, len_useful_max)
    #print(lens - len_useful_max)

    return len_useful_max

def LCS_method(sentence):
    if len(sentence) == 0 or len(sentence) == 1:
        return 0
    else:
        lens = len(sentence)
        sentence_list = list(sentence)
        sentence_list_re = list(sentence)
        sentence_list_re.reverse()
        len_useful_max = 0
        #print('sentence_list', sentence_list)
        #print('sentence_list_re', sentence_list_re)
        LCS_mat = [[0 for i in range(len(sentence_list)+1)] for i in range(len(sentence_list)+1)]
        for row_num in range(len(sentence_list)):
            for col_num in range(len(sentence_list)):

                if sentence_list[row_num] != sentence_list_re[col_num]:
                    LCS_mat[row_num+1][col_num+1] = max(LCS_mat[row_num][col_num+1], LCS_mat[row_num+1][col_num])

                if sentence_list[row_num] == sentence_list_re[col_num]:
                    LCS_mat[row_num+1][col_num+1] = LCS_mat[row_num][col_num] + 1
        #print(LCS_mat)
        len_useful_max = max(max(LCS_mat))
        #print(len_useful_max)
        print(lens - len_useful_max)

if __name__ == '__main__':
    # while True:
    #     sentence = sys.stdin.readline().strip()
    #
    #     if not sentence:
    #         break
    #     del_length = del_get_back_str_v2(sentence)



    line='zgtklhfzomzjckwmluvivvcmhjrwkuvcjrxojobpdedpamdshcwwsetfbacvonecrdvugeibglvhxuymjvoryqjwullvzglqazxrdmczyvbgakjagttrezmvrlptiwoqkrtxuroeqmryzsgokopxxdpbejmtwvpnaqrgqladdszhdwxfckmewhdvihgvacueqhvwvjxoitlpfrckxkuksaqzjpwgoldyhugsacflcdqhifldoaphgdbhaciixouavqxwlghadmfortqacbffqzocinvuqpjthgekunjsstukeiffjipzzabkuiueqnjgkuiojwbjzfynafnlcaryygqjfixaoeowhkxkbsnpsvnbxuywfxbnuoemxynbtgkqtjvzqikbafjnpbeirxxrohhnjqrbqqzercqcrcswojyylunuevtdhamlkzqnjrzibwckbkiygysuaxpjrgjmurrohkhvjpmwmmtpcszpihcntyivrjplhyrqftghglkvqeidyhtmrlcljngeyaefxnywpfsualufjwnffyqnpitgkkyrbwccqggycrvoocbwsdbftkigrkcbojuwwctknzzmvhbhbfzrqwzllulbabztqnznkqdyoqnrxhwavqhzyzvmmmphzxbikpharseywpfsqyybkynwbdrgfsaxduxojcdqcjuaywzbvdjgjqtoffasiuhvxcaockebkuxpiomqmtvsqhnyxfjceqevqvnapbk '
    line = 'gdfgg45628hghfdg' #7
    line = 'gggoloaggg'
    #lens = len(line)
    #print(lens)
    #len_useful_max = del_get_back_str_v2(line)
    #print(len_useful_max)
    #print(lens - len_useful_max)
    LCS_method(line)
    '''
   if __name__ == '__main__':
    for line in sys.stdin:
        a = str(line)
        
        lens = len(a)
        len_useful_max = del_get_back_str_v2(a)
        print(lens - len_useful_max)
        #输出为518，正确答案518，直接最后结果-2得到正确结果可以通过，啊哈哈哈
        
        #牛客网上不能用numpy模块,math可用
        https://www.nowcoder.com/question/next?pid=1725829&qid=44803&tid=22464527
    '''
