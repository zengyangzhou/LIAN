'''
https://www.nowcoder.com/question/next?pid=6910869&qid=126951&tid=22635503
[编程题] 重排数列
时间限制：1秒

空间限制：100768K

小易有一个长度为N的正整数数列A = {A[1], A[2], A[3]..., A[N]}。
牛博士给小易出了一个难题:
对数列A进行重新排列,使数列A满足所有的A[i] * A[i + 1](1 ≤ i ≤ N - 1)都是4的倍数。
小易现在需要判断一个数列是否可以重排之后满足牛博士的要求。

输入描述:
输入的第一行为数列的个数t(1 ≤ t ≤ 10),
接下来每两行描述一个数列A,第一行为数列长度n(1 ≤ n ≤ 10^5)
第二行为n个正整数A[i](1 ≤ A[i] ≤ 10^9)

输出描述:
对于每个数列输出一行表示是否可以满足牛博士要求,如果可以输出Yes,否则输出No。

输入例子1:
2
3
1 10 100
4
1 2 3 4

输出例子1:
Yes
No

'''
import sys
def reorder_list(org_list, lens):
    time_2 = 0
    pair_lens = lens - 1
    for ele in org_list:
        if ele % 4 == 0:
            pair_lens -= 2
        elif ele % 4 == 2:
            time_2 += 1
    if time_2 > 1:
        pair_lens -= (time_2 - 1)
    if pair_lens <= 0:
        print('Yes')
    else:
        print('No')
    print(lens)

line = '948 633 70 638 306 326 158 63 555 426 689 653 863 422 958 594 130 946 839 450 667 957 16 378 768 791 382 678 668 884 353 24 84 574 301 330 617 881 951 424 721 690 674 127 219 356 962 377 780 822'
org_list = list(line.strip().split())
org_list = list(map(int, org_list))
lens = len(org_list)
print(org_list)
reorder_list(org_list, lens)

'''
90%pass
import sys
def reorder_list(org_list, lens):
    time_2 = 0
    pair_lens = lens - 1
    for ele in org_list:
        if ele % 4 == 0:
            pair_lens -= 2
        elif ele % 4 == 2:
            time_2 += 1
    if time_2 > 1:
        pair_lens -= (time_2 - 1)
    if pair_lens <= 0:
        print('Yes')
    else:
        print('No')
    #print(lens)
for line in sys.stdin:
    line = list(line.strip().split())
    if len(line) > 1:
        org_list = list(map(int, line))
        lens = len(org_list)
        reorder_list(org_list, lens)
'''
