'''
https://www.nowcoder.com/question/next?pid=6910869&qid=126949&tid=22554915

时间限制：1秒

空间限制：32768K

一个由小写字母组成的字符串可以看成一些同一字母的最大碎片组成的。例如,"aaabbaaac"是由下面碎片组成的:'aaa','bb','c'。牛牛现在给定一个字符串,请你帮助计算这个字符串的所有碎片的平均长度是多少。

输入描述:
输入包括一个字符串s,字符串s的长度length(1 ≤ length ≤ 50),s只含小写字母('a'-'z')

输出描述:
输出一个整数,表示所有碎片的平均长度,四舍五入保留两位小数。

如样例所示: s = "aaabbaaac"
所有碎片的平均长度 = (3 + 2 + 3 + 1) / 4 = 2.25

输入例子1:
aaabbaaac

输出例子1:
2.25

'''
import sys
for str1 in sys.stdin:
    #print(str1)
    lens = len(str1) - 1
    str_list = list(str1)
    kind_sli = 0
    for i in range(lens):
        try:
            if str1[i] != str1[i+1]:
                kind_sli += 1
        except:
            break
    #print(kind_sli)
    res = lens/kind_sli
    print('%.2f'%res)

#     if alp not in org:
#         org.add(alp)
# org = list(org)
# print(org)
# num_alp = 0
# for ele in org:
#     num_alp += str1.count(ele)
# print(num_alp/len(org))
