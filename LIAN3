import sys
import math
def get_num_sub(N, n_list):
     sub_list = []
     for i in range(N):
         n_list_rest = n_list[i+1:]
         for rest_num in n_list_rest:
             sub = abs(n_list[i] - rest_num)
             sub_list.append(sub)
     min_sub = min(sub_list)
     max_sub = max(sub_list)
     min_num = sub_list.count(min_sub)
     max_num = sub_list.count(max_sub)

     # for subs in sub_list:
     #     if subs == min_sub:
     #         min_num = min_num + 1
     #     if subs == max_sub:
     #         max_num = max_num + 1

     #print(sub_list)
     print(min_num)
     print(max_num)
def get_num_sub_v2(N, n_list):
    n_list = list(n_list)
    n_list.sort()
    lens = N
    min_num = 0
    max_num = 0
    if lens == len(set(n_list)) or lens == 1 or lens == 2: #所有元素不相等
        min_num = 1
        max_num = 1
    elif len(set(n_list)) == 1: #所有元素相等

        min_num = 0.5 * math.factorial(lens)/math.factorial(lens - 2)
        max_num = min_num
    elif lens != len(set(n_list)):#部分元素相等
        org = set()
        duplicate = set()
        for ele in n_list:
            if ele not in org:
                org.add(ele)
            else:
                duplicate.add(ele)
        duplicate = list(sorted(duplicate))
        #print(duplicate)
        for x in duplicate:
            min_num += 0.5 * math.factorial(n_list.count(x))/math.factorial(n_list.count(x) - 2)
        if duplicate[0] == n_list[0] and duplicate[-1] == n_list[-1]:
            max_num = n_list.count(duplicate[0]) * n_list.count(duplicate[0])
        elif duplicate[0] == n_list[0]:
            max_num = n_list.count(duplicate[0])
        elif duplicate[-1] == n_list[-1]:
            max_num = n_list.count(duplicate[-1])
        else:
            max_num = 1
    print(max_num)
    print(min_num)

if __name__ == '__main__':
    N = 6
    n_list = [45, 12, 45, 32, 5, 6, 5]
    # N = 4
    # n_list = [2, 2, 2, 2]
    #
    #get_num_sub(N, n_list)
    get_num_sub_v2(N, n_list)

'''
import sys
def get_num_sub(N, n_list):
    sub_list = []
    for i in range(N):
        n_list_rest = n_list[i+1:]
        for rest_num in n_list_rest:
            sub = abs(n_list[i] - rest_num)
            sub_list.append(sub)
    min_sub = min(sub_list)
    max_sub = max(sub_list)
    min_num = 0
    max_num = 0
    for subs in sub_list:
        if subs == min_sub:
            min_num = min_num + 1
        if subs == max_sub:
            max_num = max_num + 1

    #print(sub_list)
    print(min_num)
    print(max_num)
if __name__ == '__main__':
    for N, n_list = sys.stdin:
        #n_list = [45, 12, 45, 32, 5, 6]
        get_num_sub(N, n_list)

'''

'''
链接：https://www.nowcoder.com/questionTerminal/af709ab9ca57430886632022e543d4c6
来源：牛客网

import sys
 
def main():
    k = 0
    for line in sys.stdin:
        k = 1 - k
        if (k == 0):
            li = [int(i) for i in line.strip().split()]
            m = len(li)
            li.sort()
             
            small, big = li[0], li[m-1]
            smallnum, bignum, ansbig, anssmall, mincha, mincount = 1, 1, 0, 0, -1, 0
             
            # answer big
            while (li[smallnum] == small):
                smallnum += 1
            while (li[m-1-bignum] == big):
                bignum += 1
            ansbig = smallnum * bignum
             
            #answer small
            for i in range(m-1):
                if (li[i+1] - li[i] < mincha or mincha < 0):
                    mincha = li[i+1] - li[i]
                    mincount = 1
                elif (li[i+1] - li[i] == mincha):
                    mincount += 1
            if (mincha > 0):
                anssmall = mincount
            else:
                p = 0
                for i in range(m-1):
                    if (li[i+1] == li[i]):
                        p += 1
                    else:
                        if (p > 0):
                            anssmall += p * (p + 1) / 2
                            p = 0
                anssmall += p * (p + 1) / 2
                 
            print str(anssmall) + " " + str(ansbig)
 
main()
'''
'''
import sys
import math
def get_num_sub_v2(N, n_list):
    n_list.sort()
    min_num = 0
    max_num = 0
    if N == len(set(n_list)) or N == 1 or N == 2: #所有元素不相等
        min_num = 1
        max_num = 1
    elif len(set(n_list)) == 1: #所有元素相等

        min_num = 0.5 * math.factorial(N)/math.factorial(N - 2)
        max_num = min_num
    else:#部分元素相等
        org = set()
        duplicate = set()
        for ele in n_list:
            if ele not in org:
                org.add(ele)
            else:
                duplicate.add(ele)
        duplicate = list(sorted(duplicate))
        for x in duplicate:
            min_num += 0.5 * math.factorial(n_list.count(x))/math.factorial(n_list.count(x) - 2)
        if duplicate[0] == n_list[0] and duplicate[-1] == n_list[-1]:
            max_num = n_list.count(duplicate[0]) * n_list.count(duplicate[0])
        elif duplicate[0] == n_list[0]:
            max_num = n_list.count(duplicate[0])
        elif duplicate[-1] == n_list[-1]:
            max_num = n_list.count(duplicate[-1])
        else:
            max_num = 1
    print(int(min_num), int(max_num))
if __name__ == '__main__':
    for line in sys.stdin:
        n_list = [int(i) for i in line.strip().split()]
        if len(n_list) > 1:
            N = len(n_list)
            get_num_sub_v2(N, n_list)

'''
